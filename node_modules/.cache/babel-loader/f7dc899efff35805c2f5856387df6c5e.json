{"ast":null,"code":"import React,{useState}from'react';import formatType from'../helpers/format-type';import{useHistory}from'react-router-dom';import PokemonService from'../services/pokemon-service';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PokemonForm=_ref=>{let{pokemon,isEditForm}=_ref;const history=useHistory();const types=['Plante','Feu','Eau','Insecte','Normal','Electrik','Poison','Fée','Vol','Combat','Psy'];const hasType=type=>{return form.types.value.includes(type);};const[form,setForm]=useState({picture:{value:pokemon.picture,isValid:true},name:{value:pokemon.name,isValid:true},hp:{value:pokemon.hp,isValid:true},cp:{value:pokemon.cp,isValid:true},types:{value:pokemon.types,isValid:true}});const handleInputChange=e=>{const fieldName=e.target.name;// utiliser le name ici dans le dom virtuel\nconst fieldValue=e.target.value;const newField={value:fieldValue};// copie de la form avec les modifications effectuées\nsetForm({...form,[fieldName]:newField});};/**\n * \n * @param type \n * @param e \n * verification de la case si coché ou pas \n * concat permet de fusionner \n * filter \n */const selectType=(type,e)=>{const checked=e.target.checked;let newField;if(checked){// Si l'utilisateur coche un type, on  l'ajoute à la liste des types du pokémon.\nconst newTypes=form.types.value.concat([type]);newField={value:newTypes};}else{// Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon.\nconst newTypes=form.types.value.filter(currentType=>currentType!==type);newField={value:newTypes};}setForm({...form,...{types:newField}});};/**\n * \n * @param e \n */const handleSubmit=e=>{e.preventDefault();const isFormValid=validateForm();console.log(form);if(isFormValid){pokemon.picture=form.picture.value;pokemon.name=form.name.value;pokemon.hp=form.hp.value;pokemon.cp=form.cp.value;pokemon.types=form.types.value;isEditForm?updatePokemon():addPokemon();// PokemonService.updatePokemon(pokemon).then(()=> history.push(`/pokemons/${pokemon.id}`));\n}};const isAddForm=()=>{return!isEditForm;};const validateForm=()=>{let newForm=form;// Validator url\nif(isAddForm()){const start=\"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";const end=\".png\";if(!form.picture.value.startsWith(start)||!form.picture.value.endsWith(end)){const errorMsg='L\\'url n\\'est pas valide.';const newField={value:form.picture.value,error:errorMsg,isValid:false};newForm={...newForm,...{picture:newField}};}else{const newField={value:form.picture.value,error:'',isValid:true};newForm={...newForm,...{picture:newField}};}}// Validator name\nif(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)){const errorMsg='Le nom du pokémon est requis (1-25).';const newField={value:form.name.value,error:errorMsg,isValid:false};newForm={...newForm,...{name:newField}};}else{const newField={value:form.name.value,error:'',isValid:true};newForm={...newForm,...{name:newField}};}// Validator hp\nif(!/^[0-9]{1,3}$/.test(form.hp.value)){const errorMsg='Les points de vie du pokémon sont compris entre 0 et 999.';const newField={value:form.hp.value,error:errorMsg,isValid:false};newForm={...newForm,...{hp:newField}};}else{const newField={value:form.hp.value,error:'',isValid:true};newForm={...newForm,...{hp:newField}};}// Validator cp\nif(!/^[0-9]{1,2}$/.test(form.cp.value)){const errorMsg='Les dégâts du pokémon sont compris entre 0 et 99';const newField={value:form.cp.value,error:errorMsg,isValid:false};newForm={...newForm,...{cp:newField}};}else{const newField={value:form.cp.value,error:'',isValid:true};newForm={...newForm,...{cp:newField}};}setForm(newForm);return newForm.name.isValid&&newForm.hp.isValid&&newForm.cp.isValid;};const isTypeValid=type=>{/** empêcher de déselectionner une case coché */if(form.types.value.length===1&&hasType(type)){return false;}if(form.types.value.length>=3&&!hasType(type)){return false;}return true;};/**\n * suppresion\n */const deletePokemon=()=>{PokemonService.deletePokemon(pokemon).then(()=>history.push(\"/pokemons\"));};const addPokemon=()=>{PokemonService.addPokemon(pokemon).then(()=>history.push(\"/pokemons\"));};const updatePokemon=()=>{PokemonService.updatePokemon(pokemon).then(()=>history.push(\"/pokemons/\".concat(pokemon.id)));};return/*#__PURE__*/_jsx(\"form\",{onSubmit:e=>handleSubmit(e),children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col s12 m8 offset-m2\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card hoverable\",children:[isEditForm&&/*#__PURE__*/_jsxs(\"div\",{className:\"card-image\",children:[/*#__PURE__*/_jsx(\"img\",{src:pokemon.picture,alt:pokemon.name,style:{width:'250px',margin:'0 auto'}}),/*#__PURE__*/_jsx(\"span\",{className:\"btn-floating halfway-fab waves-effect waves-light\",children:/*#__PURE__*/_jsx(\"i\",{onClick:deletePokemon,className:\"material-icons\",children:\"delete\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-stacked\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-content\",children:[isAddForm()&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"picture\",children:\"Image\"}),/*#__PURE__*/_jsx(\"input\",{id:\"picture\",type:\"text\",name:\"picture\",className:\"form-control\",value:form.picture.value,onChange:e=>handleInputChange(e)}),form.picture.error&&/*#__PURE__*/_jsx(\"div\",{className:\"card-panel red accent-1\",children:form.picture.error})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Nom\"}),/*#__PURE__*/_jsx(\"input\",{id:\"name\",type:\"text\",className:\"form-control\",value:form.name.value,name:\"name\",onChange:e=>handleInputChange(e)}),form.name.error&&/*#__PURE__*/_jsx(\"div\",{className:\"card-panel red accent-1\",children:form.name.error})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"hp\",children:\"Point de vie\"}),/*#__PURE__*/_jsx(\"input\",{id:\"hp\",type:\"number\",className:\"form-control\",value:form.hp.value,name:\"hp\",onChange:e=>handleInputChange(e)}),form.hp.error&&/*#__PURE__*/_jsx(\"div\",{className:\"card-panel red accent-1\",children:form.hp.error})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"cp\",children:\"D\\xE9g\\xE2ts\"}),/*#__PURE__*/_jsx(\"input\",{id:\"cp\",type:\"number\",className:\"form-control\",value:form.cp.value,name:\"cp\",onChange:e=>handleInputChange(e)}),form.cp.error&&/*#__PURE__*/_jsx(\"div\",{className:\"card-panel red accent-1\",children:form.cp.error})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Types\"}),types.map(type=>/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'10px'},children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{id:type,type:\"checkbox\",className:\"filled-in\",value:type,checked:hasType(type),onChange:e=>selectType(type,e),disabled:!isTypeValid(type)}),/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(\"p\",{className:formatType(type),children:type})})]})},type))]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-action center\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn\",children:\"Valider\"})})]})]})})})});};export default PokemonForm;","map":{"version":3,"names":["React","useState","formatType","useHistory","PokemonService","jsx","_jsx","jsxs","_jsxs","PokemonForm","_ref","pokemon","isEditForm","history","types","hasType","type","form","value","includes","setForm","picture","isValid","name","hp","cp","handleInputChange","e","fieldName","target","fieldValue","newField","selectType","checked","newTypes","concat","filter","currentType","handleSubmit","preventDefault","isFormValid","validateForm","console","log","updatePokemon","addPokemon","isAddForm","newForm","start","end","startsWith","endsWith","errorMsg","error","test","isTypeValid","length","deletePokemon","then","push","id","onSubmit","children","className","src","alt","style","width","margin","onClick","htmlFor","onChange","map","marginBottom","disabled"],"sources":["C:/Users/DELL Gaming/Desktop/REACTJS/formationpokemon/src/components/pokemon-form.tsx"],"sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport Pokemon from '../models/pokemon';\nimport formatType from '../helpers/format-type';\nimport { useHistory } from 'react-router-dom';\nimport PokemonService from '../services/pokemon-service';\n  \ntype Props = {\n  pokemon: Pokemon,\n  isEditForm: boolean\n};\ntype Field = {\n  value: any;\n  error?: string;\n  isValid?: boolean;\n}\n\ntype Form = {\n  picture: Field;\n  name: Field;\n  hp: Field;\n  cp: Field;\n  types: Field;\n}\n\n\nconst PokemonForm: FunctionComponent<Props> = ({pokemon,isEditForm}) => {\n  const history = useHistory();\n\n  const types: string[] = [\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\n  ];\n  const hasType = (type:string): boolean=>{\n  return form.types.value.includes(type);\n  }\n  \n    const [form, setForm] = useState<Form>({\n      picture: { value: pokemon.picture, isValid: true },\n      name: { value: pokemon.name, isValid: true },\n      hp: { value: pokemon.hp, isValid: true },\n      cp: { value: pokemon.cp, isValid: true },\n      types: { value: pokemon.types, isValid: true },\n    });\n\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const fieldName: string = e.target.name; // utiliser le name ici dans le dom virtuel\n      const fieldValue: string = e.target.value;\n      const newField: Field = { value: fieldValue };\n    \n      // copie de la form avec les modifications effectuées\n      setForm({\n        ...form,\n        [fieldName]: newField\n      });\n    };\n\n/**\n * \n * @param type \n * @param e \n * verification de la case si coché ou pas \n * concat permet de fusionner \n * filter \n */\n    const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\n      const checked = e.target.checked;\n      let newField: Field;\n  \n      if(checked) {\n        // Si l'utilisateur coche un type, on  l'ajoute à la liste des types du pokémon.\n        const newTypes: string[] = form.types.value.concat([type]);\n        newField = { value: newTypes };\n      } else {\n        // Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon.\n        const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\n        newField = { value: newTypes };\n      }\n  \n      setForm({...form, ...{ types: newField }});\n    }\n/**\n * \n * @param e \n */\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      const isFormValid= validateForm();\n     console.log(form);\n     if(isFormValid){\n      pokemon.picture = form.picture.value;\n      pokemon.name = form.name.value;\n      pokemon.hp = form.hp.value;\n      pokemon.cp = form.cp.value;\n      pokemon.types = form.types.value;\n      isEditForm? updatePokemon(): addPokemon();\n     // PokemonService.updatePokemon(pokemon).then(()=> history.push(`/pokemons/${pokemon.id}`));\n     }\n\n      }\n\n      const isAddForm = (): boolean => {\n        return !isEditForm;\n      }\n\n      const validateForm = () => {\n        let newForm: Form = form;\n\n         // Validator url\n    if(isAddForm()) {\n\n      const start = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\n      const end = \".png\";\n\n      if(!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\n        const errorMsg: string = 'L\\'url n\\'est pas valide.';\n        const newField: Field = { value: form.picture.value, error: errorMsg, isValid: false };\n        newForm = { ...newForm, ...{ picture: newField } };\n      } else {\n        const newField: Field = { value: form.picture.value, error: '', isValid: true };\n        newForm = { ...newForm, ...{ picture: newField } };\n      }\n    }\n        // Validator name\n        if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n          const errorMsg: string = 'Le nom du pokémon est requis (1-25).';\n          const newField: Field = { value: form.name.value, error: errorMsg, isValid: false };\n          newForm = { ...newForm, ...{ name: newField } };\n        } else {\n          const newField: Field = { value: form.name.value, error: '', isValid: true };\n          newForm = { ...newForm, ...{ name: newField } };\n        }\n    \n        // Validator hp\n        if(!/^[0-9]{1,3}$/.test(form.hp.value)) {\n          const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.';\n          const newField: Field = {value: form.hp.value, error: errorMsg, isValid: false};\n          newForm = { ...newForm, ...{ hp: newField } };\n        } else {\n          const newField: Field = { value: form.hp.value, error: '', isValid: true };\n          newForm = { ...newForm, ...{ hp: newField } };\n        }\n    \n        // Validator cp\n        if(!/^[0-9]{1,2}$/.test(form.cp.value)) {\n          const errorMsg: string = 'Les dégâts du pokémon sont compris entre 0 et 99';\n          const newField: Field = {value: form.cp.value, error: errorMsg, isValid: false};\n          newForm = { ...newForm, ...{ cp: newField } };\n        } else {\n          const newField: Field = { value: form.cp.value, error: '', isValid: true };\n          newForm = { ...newForm, ...{ cp: newField } };\n        }\n    \n        setForm(newForm);\n        return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n      } \n\n      const isTypeValid =(type: string): boolean=>{\n        /** empêcher de déselectionner une case coché */\n        if(form.types.value.length===1 && hasType(type)){\n          return false;\n        }\n\n        if(form.types.value.length>=3 && !hasType(type)){\n          return false;\n        }\n        return true;  \n      }\n/**\n * suppresion\n */\n      const deletePokemon = () => {\n        PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`));\n      }\n\n      const addPokemon = () => {\n        PokemonService.addPokemon(pokemon).then(() => history.push(`/pokemons`));\n      }\n    \n      const updatePokemon = () => {\n        PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\n      }\n\n  return (\n    <form onSubmit={e=>handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\"> \n          {isEditForm &&(  <div className=\"card-image\">\n              <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n           <span className=\"btn-floating halfway-fab waves-effect waves-light\">\n                <i onClick={deletePokemon} className=\"material-icons\">delete</i>\n              </span>\n            </div>)\n            \n          }\n          \n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n              {isAddForm() && (\n                  <div className=\"form-group\">\n                    <label htmlFor=\"picture\">Image</label>\n                    <input id=\"picture\" type=\"text\" name=\"picture\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)}></input>\n                    {/* error */}\n                    {form.picture.error &&\n                      <div className=\"card-panel red accent-1\"> \n                    {form.picture.error} \n                  </div>\n                  } \n                </div>\n                )}\n                {/* Pokemon name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Nom</label>\n                  <input id=\"name\"   type=\"text\" className=\"form-control\" value={form.name.value}\n                   name=\"name\" onChange={e=>handleInputChange(e)}></input>\n                   {form.name.error && \n                  <div className=\"card-panel red accent-1\">\n                    {form.name.error}\n                  </div>\n                  }\n                </div>\n                {/* Pokemon hp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"hp\">Point de vie</label>\n                  <input id=\"hp\" type=\"number\" className=\"form-control\" value={form.hp.value}\n                  name=\"hp\" onChange={e=>handleInputChange(e)}></input>\n                    {form.hp.error && \n                  <div className=\"card-panel red accent-1\">\n                      {form.hp.error}\n                  </div>\n                  }\n                </div>\n                {/* Pokemon cp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"cp\">Dégâts</label>\n                  <input id=\"cp\" type=\"number\" className=\"form-control\" value={form.cp.value}\n                  name=\"cp\" onChange={e=>handleInputChange(e)}></input>\n                    {form.cp.error && \n                  <div className=\"card-panel red accent-1\">\n                      {form.cp.error}\n                  </div>\n                  }\n                </div>\n                {/* Pokemon types */}\n                <div className=\"form-group\">\n                  <label>Types</label>\n                  {types.map(type => (\n                    <div key={type} style={{marginBottom: '10px'}}>\n                      <label>\n                        <input id={type} type=\"checkbox\" className=\"filled-in\" value={type\n                        } checked={hasType(type)} onChange={e => selectType(type, e)}\n                        disabled={!isTypeValid(type)}></input>\n                        <span>\n                          <p className={formatType(type)}>{ type }</p>\n                        </span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n   \nexport default PokemonForm;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAuBC,QAAQ,KAAQ,OAAO,CAE1D,MAAO,CAAAC,UAAU,KAAM,wBAAwB,CAC/C,OAASC,UAAU,KAAQ,kBAAkB,CAC7C,MAAO,CAAAC,cAAc,KAAM,6BAA6B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAqBzD,KAAM,CAAAC,WAAqC,CAAGC,IAAA,EAA0B,IAAzB,CAACC,OAAO,CAACC,UAAU,CAAC,CAAAF,IAAA,CACjE,KAAM,CAAAG,OAAO,CAAGV,UAAU,CAAC,CAAC,CAE5B,KAAM,CAAAW,KAAe,CAAG,CACtB,QAAQ,CAAE,KAAK,CAAE,KAAK,CAAE,SAAS,CAAE,QAAQ,CAAE,UAAU,CACvD,QAAQ,CAAE,MAAM,CAAE,KAAK,CAAE,QAAQ,CAAE,KAAK,CACzC,CACD,KAAM,CAAAC,OAAO,CAAIC,IAAW,EAAY,CACxC,MAAO,CAAAC,IAAI,CAACH,KAAK,CAACI,KAAK,CAACC,QAAQ,CAACH,IAAI,CAAC,CACtC,CAAC,CAEC,KAAM,CAACC,IAAI,CAAEG,OAAO,CAAC,CAAGnB,QAAQ,CAAO,CACrCoB,OAAO,CAAE,CAAEH,KAAK,CAAEP,OAAO,CAACU,OAAO,CAAEC,OAAO,CAAE,IAAK,CAAC,CAClDC,IAAI,CAAE,CAAEL,KAAK,CAAEP,OAAO,CAACY,IAAI,CAAED,OAAO,CAAE,IAAK,CAAC,CAC5CE,EAAE,CAAE,CAAEN,KAAK,CAAEP,OAAO,CAACa,EAAE,CAAEF,OAAO,CAAE,IAAK,CAAC,CACxCG,EAAE,CAAE,CAAEP,KAAK,CAAEP,OAAO,CAACc,EAAE,CAAEH,OAAO,CAAE,IAAK,CAAC,CACxCR,KAAK,CAAE,CAAEI,KAAK,CAAEP,OAAO,CAACG,KAAK,CAAEQ,OAAO,CAAE,IAAK,CAC/C,CAAC,CAAC,CAEF,KAAM,CAAAI,iBAAiB,CAAIC,CAAsC,EAAK,CACpE,KAAM,CAAAC,SAAiB,CAAGD,CAAC,CAACE,MAAM,CAACN,IAAI,CAAE;AACzC,KAAM,CAAAO,UAAkB,CAAGH,CAAC,CAACE,MAAM,CAACX,KAAK,CACzC,KAAM,CAAAa,QAAe,CAAG,CAAEb,KAAK,CAAEY,UAAW,CAAC,CAE7C;AACAV,OAAO,CAAC,CACN,GAAGH,IAAI,CACP,CAACW,SAAS,EAAGG,QACf,CAAC,CAAC,CACJ,CAAC,CAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACI,KAAM,CAAAC,UAAU,CAAGA,CAAChB,IAAY,CAAEW,CAAsC,GAAW,CACjF,KAAM,CAAAM,OAAO,CAAGN,CAAC,CAACE,MAAM,CAACI,OAAO,CAChC,GAAI,CAAAF,QAAe,CAEnB,GAAGE,OAAO,CAAE,CACV;AACA,KAAM,CAAAC,QAAkB,CAAGjB,IAAI,CAACH,KAAK,CAACI,KAAK,CAACiB,MAAM,CAAC,CAACnB,IAAI,CAAC,CAAC,CAC1De,QAAQ,CAAG,CAAEb,KAAK,CAAEgB,QAAS,CAAC,CAChC,CAAC,IAAM,CACL;AACA,KAAM,CAAAA,QAAkB,CAAGjB,IAAI,CAACH,KAAK,CAACI,KAAK,CAACkB,MAAM,CAAEC,WAAmB,EAAKA,WAAW,GAAKrB,IAAI,CAAC,CACjGe,QAAQ,CAAG,CAAEb,KAAK,CAAEgB,QAAS,CAAC,CAChC,CAEAd,OAAO,CAAC,CAAC,GAAGH,IAAI,CAAE,GAAG,CAAEH,KAAK,CAAEiB,QAAS,CAAC,CAAC,CAAC,CAC5C,CAAC,CACL;AACA;AACA;AACA,GACI,KAAM,CAAAO,YAAY,CAAIX,CAAmC,EAAK,CAC5DA,CAAC,CAACY,cAAc,CAAC,CAAC,CAClB,KAAM,CAAAC,WAAW,CAAEC,YAAY,CAAC,CAAC,CAClCC,OAAO,CAACC,GAAG,CAAC1B,IAAI,CAAC,CACjB,GAAGuB,WAAW,CAAC,CACd7B,OAAO,CAACU,OAAO,CAAGJ,IAAI,CAACI,OAAO,CAACH,KAAK,CACpCP,OAAO,CAACY,IAAI,CAAGN,IAAI,CAACM,IAAI,CAACL,KAAK,CAC9BP,OAAO,CAACa,EAAE,CAAGP,IAAI,CAACO,EAAE,CAACN,KAAK,CAC1BP,OAAO,CAACc,EAAE,CAAGR,IAAI,CAACQ,EAAE,CAACP,KAAK,CAC1BP,OAAO,CAACG,KAAK,CAAGG,IAAI,CAACH,KAAK,CAACI,KAAK,CAChCN,UAAU,CAAEgC,aAAa,CAAC,CAAC,CAAEC,UAAU,CAAC,CAAC,CAC1C;AACA,CAEC,CAAC,CAED,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAe,CAC/B,MAAO,CAAClC,UAAU,CACpB,CAAC,CAED,KAAM,CAAA6B,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAI,CAAAM,OAAa,CAAG9B,IAAI,CAEvB;AACL,GAAG6B,SAAS,CAAC,CAAC,CAAE,CAEd,KAAM,CAAAE,KAAK,CAAG,4DAA4D,CAC1E,KAAM,CAAAC,GAAG,CAAG,MAAM,CAElB,GAAG,CAAChC,IAAI,CAACI,OAAO,CAACH,KAAK,CAACgC,UAAU,CAACF,KAAK,CAAC,EAAI,CAAC/B,IAAI,CAACI,OAAO,CAACH,KAAK,CAACiC,QAAQ,CAACF,GAAG,CAAC,CAAE,CAC7E,KAAM,CAAAG,QAAgB,CAAG,2BAA2B,CACpD,KAAM,CAAArB,QAAe,CAAG,CAAEb,KAAK,CAAED,IAAI,CAACI,OAAO,CAACH,KAAK,CAAEmC,KAAK,CAAED,QAAQ,CAAE9B,OAAO,CAAE,KAAM,CAAC,CACtFyB,OAAO,CAAG,CAAE,GAAGA,OAAO,CAAE,GAAG,CAAE1B,OAAO,CAAEU,QAAS,CAAE,CAAC,CACpD,CAAC,IAAM,CACL,KAAM,CAAAA,QAAe,CAAG,CAAEb,KAAK,CAAED,IAAI,CAACI,OAAO,CAACH,KAAK,CAAEmC,KAAK,CAAE,EAAE,CAAE/B,OAAO,CAAE,IAAK,CAAC,CAC/EyB,OAAO,CAAG,CAAE,GAAGA,OAAO,CAAE,GAAG,CAAE1B,OAAO,CAAEU,QAAS,CAAE,CAAC,CACpD,CACF,CACI;AACA,GAAG,CAAC,sBAAsB,CAACuB,IAAI,CAACrC,IAAI,CAACM,IAAI,CAACL,KAAK,CAAC,CAAE,CAChD,KAAM,CAAAkC,QAAgB,CAAG,sCAAsC,CAC/D,KAAM,CAAArB,QAAe,CAAG,CAAEb,KAAK,CAAED,IAAI,CAACM,IAAI,CAACL,KAAK,CAAEmC,KAAK,CAAED,QAAQ,CAAE9B,OAAO,CAAE,KAAM,CAAC,CACnFyB,OAAO,CAAG,CAAE,GAAGA,OAAO,CAAE,GAAG,CAAExB,IAAI,CAAEQ,QAAS,CAAE,CAAC,CACjD,CAAC,IAAM,CACL,KAAM,CAAAA,QAAe,CAAG,CAAEb,KAAK,CAAED,IAAI,CAACM,IAAI,CAACL,KAAK,CAAEmC,KAAK,CAAE,EAAE,CAAE/B,OAAO,CAAE,IAAK,CAAC,CAC5EyB,OAAO,CAAG,CAAE,GAAGA,OAAO,CAAE,GAAG,CAAExB,IAAI,CAAEQ,QAAS,CAAE,CAAC,CACjD,CAEA;AACA,GAAG,CAAC,cAAc,CAACuB,IAAI,CAACrC,IAAI,CAACO,EAAE,CAACN,KAAK,CAAC,CAAE,CACtC,KAAM,CAAAkC,QAAgB,CAAG,2DAA2D,CACpF,KAAM,CAAArB,QAAe,CAAG,CAACb,KAAK,CAAED,IAAI,CAACO,EAAE,CAACN,KAAK,CAAEmC,KAAK,CAAED,QAAQ,CAAE9B,OAAO,CAAE,KAAK,CAAC,CAC/EyB,OAAO,CAAG,CAAE,GAAGA,OAAO,CAAE,GAAG,CAAEvB,EAAE,CAAEO,QAAS,CAAE,CAAC,CAC/C,CAAC,IAAM,CACL,KAAM,CAAAA,QAAe,CAAG,CAAEb,KAAK,CAAED,IAAI,CAACO,EAAE,CAACN,KAAK,CAAEmC,KAAK,CAAE,EAAE,CAAE/B,OAAO,CAAE,IAAK,CAAC,CAC1EyB,OAAO,CAAG,CAAE,GAAGA,OAAO,CAAE,GAAG,CAAEvB,EAAE,CAAEO,QAAS,CAAE,CAAC,CAC/C,CAEA;AACA,GAAG,CAAC,cAAc,CAACuB,IAAI,CAACrC,IAAI,CAACQ,EAAE,CAACP,KAAK,CAAC,CAAE,CACtC,KAAM,CAAAkC,QAAgB,CAAG,kDAAkD,CAC3E,KAAM,CAAArB,QAAe,CAAG,CAACb,KAAK,CAAED,IAAI,CAACQ,EAAE,CAACP,KAAK,CAAEmC,KAAK,CAAED,QAAQ,CAAE9B,OAAO,CAAE,KAAK,CAAC,CAC/EyB,OAAO,CAAG,CAAE,GAAGA,OAAO,CAAE,GAAG,CAAEtB,EAAE,CAAEM,QAAS,CAAE,CAAC,CAC/C,CAAC,IAAM,CACL,KAAM,CAAAA,QAAe,CAAG,CAAEb,KAAK,CAAED,IAAI,CAACQ,EAAE,CAACP,KAAK,CAAEmC,KAAK,CAAE,EAAE,CAAE/B,OAAO,CAAE,IAAK,CAAC,CAC1EyB,OAAO,CAAG,CAAE,GAAGA,OAAO,CAAE,GAAG,CAAEtB,EAAE,CAAEM,QAAS,CAAE,CAAC,CAC/C,CAEAX,OAAO,CAAC2B,OAAO,CAAC,CAChB,MAAO,CAAAA,OAAO,CAACxB,IAAI,CAACD,OAAO,EAAIyB,OAAO,CAACvB,EAAE,CAACF,OAAO,EAAIyB,OAAO,CAACtB,EAAE,CAACH,OAAO,CACzE,CAAC,CAED,KAAM,CAAAiC,WAAW,CAAGvC,IAAY,EAAY,CAC1C,gDACA,GAAGC,IAAI,CAACH,KAAK,CAACI,KAAK,CAACsC,MAAM,GAAG,CAAC,EAAIzC,OAAO,CAACC,IAAI,CAAC,CAAC,CAC9C,MAAO,MAAK,CACd,CAEA,GAAGC,IAAI,CAACH,KAAK,CAACI,KAAK,CAACsC,MAAM,EAAE,CAAC,EAAI,CAACzC,OAAO,CAACC,IAAI,CAAC,CAAC,CAC9C,MAAO,MAAK,CACd,CACA,MAAO,KAAI,CACb,CAAC,CACP;AACA;AACA,GACM,KAAM,CAAAyC,aAAa,CAAGA,CAAA,GAAM,CAC1BrD,cAAc,CAACqD,aAAa,CAAC9C,OAAO,CAAC,CAAC+C,IAAI,CAAC,IAAM7C,OAAO,CAAC8C,IAAI,YAAY,CAAC,CAAC,CAC7E,CAAC,CAED,KAAM,CAAAd,UAAU,CAAGA,CAAA,GAAM,CACvBzC,cAAc,CAACyC,UAAU,CAAClC,OAAO,CAAC,CAAC+C,IAAI,CAAC,IAAM7C,OAAO,CAAC8C,IAAI,YAAY,CAAC,CAAC,CAC1E,CAAC,CAED,KAAM,CAAAf,aAAa,CAAGA,CAAA,GAAM,CAC1BxC,cAAc,CAACwC,aAAa,CAACjC,OAAO,CAAC,CAAC+C,IAAI,CAAC,IAAM7C,OAAO,CAAC8C,IAAI,cAAAxB,MAAA,CAAcxB,OAAO,CAACiD,EAAE,CAAE,CAAC,CAAC,CAC3F,CAAC,CAEL,mBACEtD,IAAA,SAAMuD,QAAQ,CAAElC,CAAC,EAAEW,YAAY,CAACX,CAAC,CAAE,CAAAmC,QAAA,cACjCxD,IAAA,QAAKyD,SAAS,CAAC,KAAK,CAAAD,QAAA,cAClBxD,IAAA,QAAKyD,SAAS,CAAC,sBAAsB,CAAAD,QAAA,cACnCtD,KAAA,QAAKuD,SAAS,CAAC,gBAAgB,CAAAD,QAAA,EAC9BlD,UAAU,eAAMJ,KAAA,QAAKuD,SAAS,CAAC,YAAY,CAAAD,QAAA,eACxCxD,IAAA,QAAK0D,GAAG,CAAErD,OAAO,CAACU,OAAQ,CAAC4C,GAAG,CAAEtD,OAAO,CAACY,IAAK,CAAC2C,KAAK,CAAE,CAACC,KAAK,CAAE,OAAO,CAAEC,MAAM,CAAE,QAAQ,CAAE,CAAC,CAAC,cAC7F9D,IAAA,SAAMyD,SAAS,CAAC,mDAAmD,CAAAD,QAAA,cAC9DxD,IAAA,MAAG+D,OAAO,CAAEZ,aAAc,CAACM,SAAS,CAAC,gBAAgB,CAAAD,QAAA,CAAC,QAAM,CAAG,CAAC,CAC5D,CAAC,EACJ,CAAE,cAIPtD,KAAA,QAAKuD,SAAS,CAAC,cAAc,CAAAD,QAAA,eAC3BtD,KAAA,QAAKuD,SAAS,CAAC,cAAc,CAAAD,QAAA,EAC5BhB,SAAS,CAAC,CAAC,eACRtC,KAAA,QAAKuD,SAAS,CAAC,YAAY,CAAAD,QAAA,eACzBxD,IAAA,UAAOgE,OAAO,CAAC,SAAS,CAAAR,QAAA,CAAC,OAAK,CAAO,CAAC,cACtCxD,IAAA,UAAOsD,EAAE,CAAC,SAAS,CAAC5C,IAAI,CAAC,MAAM,CAACO,IAAI,CAAC,SAAS,CAACwC,SAAS,CAAC,cAAc,CAAC7C,KAAK,CAAED,IAAI,CAACI,OAAO,CAACH,KAAM,CAACqD,QAAQ,CAAE5C,CAAC,EAAID,iBAAiB,CAACC,CAAC,CAAE,CAAQ,CAAC,CAE/IV,IAAI,CAACI,OAAO,CAACgC,KAAK,eACjB/C,IAAA,QAAKyD,SAAS,CAAC,yBAAyB,CAAAD,QAAA,CACzC7C,IAAI,CAACI,OAAO,CAACgC,KAAK,CAChB,CAAC,EAEH,CACJ,cAED7C,KAAA,QAAKuD,SAAS,CAAC,YAAY,CAAAD,QAAA,eACzBxD,IAAA,UAAOgE,OAAO,CAAC,MAAM,CAAAR,QAAA,CAAC,KAAG,CAAO,CAAC,cACjCxD,IAAA,UAAOsD,EAAE,CAAC,MAAM,CAAG5C,IAAI,CAAC,MAAM,CAAC+C,SAAS,CAAC,cAAc,CAAC7C,KAAK,CAAED,IAAI,CAACM,IAAI,CAACL,KAAM,CAC9EK,IAAI,CAAC,MAAM,CAACgD,QAAQ,CAAE5C,CAAC,EAAED,iBAAiB,CAACC,CAAC,CAAE,CAAQ,CAAC,CACtDV,IAAI,CAACM,IAAI,CAAC8B,KAAK,eACjB/C,IAAA,QAAKyD,SAAS,CAAC,yBAAyB,CAAAD,QAAA,CACrC7C,IAAI,CAACM,IAAI,CAAC8B,KAAK,CACb,CAAC,EAEH,CAAC,cAEN7C,KAAA,QAAKuD,SAAS,CAAC,YAAY,CAAAD,QAAA,eACzBxD,IAAA,UAAOgE,OAAO,CAAC,IAAI,CAAAR,QAAA,CAAC,cAAY,CAAO,CAAC,cACxCxD,IAAA,UAAOsD,EAAE,CAAC,IAAI,CAAC5C,IAAI,CAAC,QAAQ,CAAC+C,SAAS,CAAC,cAAc,CAAC7C,KAAK,CAAED,IAAI,CAACO,EAAE,CAACN,KAAM,CAC3EK,IAAI,CAAC,IAAI,CAACgD,QAAQ,CAAE5C,CAAC,EAAED,iBAAiB,CAACC,CAAC,CAAE,CAAQ,CAAC,CAClDV,IAAI,CAACO,EAAE,CAAC6B,KAAK,eAChB/C,IAAA,QAAKyD,SAAS,CAAC,yBAAyB,CAAAD,QAAA,CACnC7C,IAAI,CAACO,EAAE,CAAC6B,KAAK,CACb,CAAC,EAEH,CAAC,cAEN7C,KAAA,QAAKuD,SAAS,CAAC,YAAY,CAAAD,QAAA,eACzBxD,IAAA,UAAOgE,OAAO,CAAC,IAAI,CAAAR,QAAA,CAAC,cAAM,CAAO,CAAC,cAClCxD,IAAA,UAAOsD,EAAE,CAAC,IAAI,CAAC5C,IAAI,CAAC,QAAQ,CAAC+C,SAAS,CAAC,cAAc,CAAC7C,KAAK,CAAED,IAAI,CAACQ,EAAE,CAACP,KAAM,CAC3EK,IAAI,CAAC,IAAI,CAACgD,QAAQ,CAAE5C,CAAC,EAAED,iBAAiB,CAACC,CAAC,CAAE,CAAQ,CAAC,CAClDV,IAAI,CAACQ,EAAE,CAAC4B,KAAK,eAChB/C,IAAA,QAAKyD,SAAS,CAAC,yBAAyB,CAAAD,QAAA,CACnC7C,IAAI,CAACQ,EAAE,CAAC4B,KAAK,CACb,CAAC,EAEH,CAAC,cAEN7C,KAAA,QAAKuD,SAAS,CAAC,YAAY,CAAAD,QAAA,eACzBxD,IAAA,UAAAwD,QAAA,CAAO,OAAK,CAAO,CAAC,CACnBhD,KAAK,CAAC0D,GAAG,CAACxD,IAAI,eACbV,IAAA,QAAgB4D,KAAK,CAAE,CAACO,YAAY,CAAE,MAAM,CAAE,CAAAX,QAAA,cAC5CtD,KAAA,UAAAsD,QAAA,eACExD,IAAA,UAAOsD,EAAE,CAAE5C,IAAK,CAACA,IAAI,CAAC,UAAU,CAAC+C,SAAS,CAAC,WAAW,CAAC7C,KAAK,CAAEF,IAC7D,CAACiB,OAAO,CAAElB,OAAO,CAACC,IAAI,CAAE,CAACuD,QAAQ,CAAE5C,CAAC,EAAIK,UAAU,CAAChB,IAAI,CAAEW,CAAC,CAAE,CAC7D+C,QAAQ,CAAE,CAACnB,WAAW,CAACvC,IAAI,CAAE,CAAQ,CAAC,cACtCV,IAAA,SAAAwD,QAAA,cACExD,IAAA,MAAGyD,SAAS,CAAE7D,UAAU,CAACc,IAAI,CAAE,CAAA8C,QAAA,CAAG9C,IAAI,CAAK,CAAC,CACxC,CAAC,EACF,CAAC,EARAA,IASL,CACN,CAAC,EACC,CAAC,EACH,CAAC,cACNV,IAAA,QAAKyD,SAAS,CAAC,oBAAoB,CAAAD,QAAA,cAEjCxD,IAAA,WAAQU,IAAI,CAAC,QAAQ,CAAC+C,SAAS,CAAC,KAAK,CAAAD,QAAA,CAAC,SAAO,CAAQ,CAAC,CACnD,CAAC,EACH,CAAC,EACH,CAAC,CACH,CAAC,CACH,CAAC,CACF,CAAC,CAEX,CAAC,CAED,cAAe,CAAArD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}