{"ast":null,"code":"import POKEMONS from \"../models/mock-pokemon\";\nexport default class PokemonService {\n  static getPokemons() {\n    return fetch('http://localhost:3001/pokemons').then(response => response.json()).catch(error => this.handleError(error));\n  }\n  static getPokemon(id) {\n    return fetch(`http://localhost:3001/pokemons/${id}`).then(response => response.json()).then(data => this.isEmpty(data) ? null : data).catch(error => this.handleError(error));\n  }\n  static deletePokemon(pokemon) {\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n      method: 'DELETE',\n      body: JSON.stringify(pokemon),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => this.isEmpty(data) ? null : data).catch(error => this.handleError(error));\n  }\n  static addPokemon(pokemon) {\n    // delete pokemon.created;\n\n    return fetch(`http://localhost:3001/pokemons`, {\n      method: 'POST',\n      body: JSON.stringify(pokemon),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).catch(error => this.handleError(error));\n    return new Promise(resolve => {\n      this.pokemons.push(pokemon);\n      resolve(pokemon);\n    });\n  }\n  static updatePokemon(pokemon) {\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(pokemon),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n  static isEmpty(data) {\n    return Object.keys(data).length === 0;\n  }\n  static handleError(error) {\n    console.log(error);\n  }\n  static searchPokemon(term) {\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons?q=${term}`).then(response => response.json()).catch(error => this.handleError(error));\n    }\n    return new Promise(resolve => {\n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\n      resolve(results);\n    });\n  }\n}\nPokemonService.pokemons = POKEMONS;\nPokemonService.isDev = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';","map":{"version":3,"names":["POKEMONS","PokemonService","getPokemons","fetch","then","response","json","catch","error","handleError","getPokemon","id","data","isEmpty","deletePokemon","pokemon","method","body","JSON","stringify","headers","addPokemon","ok","Error","Promise","resolve","pokemons","push","updatePokemon","Object","keys","length","console","log","searchPokemon","term","isDev","results","filter","name","includes","process","env","NODE_ENV"],"sources":["C:/Users/DELL Gaming/Desktop/REACTJS/formationpokemon/src/services/pokemon-service.ts"],"sourcesContent":["import Pokemon from \"../models/pokemon\";\nimport POKEMONS from \"../models/mock-pokemon\";\nimport { error } from \"console\";\nimport { METHODS } from \"http\";\n\nexport default class PokemonService {\n\n  static pokemons:Pokemon[] = POKEMONS;\n\n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\n\n  static getPokemons(): Promise<Pokemon[]> {\n      return fetch('http://localhost:3001/pokemons')\n      .then(response => response.json())\n      .catch(error=>this.handleError(error));\n    }\n\n  static getPokemon(id: number): Promise<Pokemon|null> {\n      return fetch(`http://localhost:3001/pokemons/${id}`)\n      .then(response => response.json())\n      .then(data => this.isEmpty(data) ? null : data)\n      .catch(error=>this.handleError(error));\n  }   \n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`,   {method:'DELETE',\n    body:JSON.stringify(pokemon),\n    headers:{'Content-Type': 'application/json'}\n  }\n    )\n    .then(response => response.json())\n    .then(data => this.isEmpty(data) ? null : data)\n    .catch(error=>this.handleError(error));\n} \n\nstatic addPokemon(pokemon: Pokemon): Promise<Pokemon>{\n // delete pokemon.created;\n\n\n    return fetch(`http://localhost:3001/pokemons`, {\n      method: 'POST',\n      body: JSON.stringify(pokemon),\n      headers: { 'Content-Type': 'application/json' }\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .catch(error => this.handleError(error));\n\n\n  return new Promise(resolve => {\n    this.pokemons.push(pokemon);\n    resolve(pokemon);\n  });\n}\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon|null> {\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`,\n    {method:'PUT',\n  body:JSON.stringify(pokemon),\n  headers:{'Content-Type': 'application/json'}\n}\n    )\n    .then(response => response.json())\n    .catch(error=>this.handleError(error));\n}  \n\n\n\n\n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error: Error) :void{\nconsole.log(error);\n\n  }\n  static searchPokemon(term: string): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\n      resolve(results);\n    });\n\n  }\n\n}"],"mappings":"AACA,OAAOA,QAAQ,MAAM,wBAAwB;AAI7C,eAAe,MAAMC,cAAc,CAAC;EAMlC,OAAOC,WAAWA,CAAA,EAAuB;IACrC,OAAOC,KAAK,CAAC,gCAAgC,CAAC,CAC7CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAE,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC,CAAC;EACxC;EAEF,OAAOE,UAAUA,CAACC,EAAU,EAAyB;IACjD,OAAOR,KAAK,CAAC,kCAAkCQ,EAAE,EAAE,CAAC,CACnDP,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACQ,IAAI,IAAI,IAAI,CAACC,OAAO,CAACD,IAAI,CAAC,GAAG,IAAI,GAAGA,IAAI,CAAC,CAC9CL,KAAK,CAACC,KAAK,IAAE,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC,CAAC;EAC1C;EACA,OAAOM,aAAaA,CAACC,OAAgB,EAAe;IAClD,OAAOZ,KAAK,CAAC,kCAAkCY,OAAO,CAACJ,EAAE,EAAE,EAAI;MAACK,MAAM,EAAC,QAAQ;MAC/EC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC;MAC5BK,OAAO,EAAC;QAAC,cAAc,EAAE;MAAkB;IAC7C,CACE,CAAC,CACAhB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACQ,IAAI,IAAI,IAAI,CAACC,OAAO,CAACD,IAAI,CAAC,GAAG,IAAI,GAAGA,IAAI,CAAC,CAC9CL,KAAK,CAACC,KAAK,IAAE,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC,CAAC;EAC1C;EAEA,OAAOa,UAAUA,CAACN,OAAgB,EAAmB;IACpD;;IAGG,OAAOZ,KAAK,CAAC,gCAAgC,EAAE;MAC7Ca,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC;MAC7BK,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC,CACDhB,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACiB,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOlB,QAAQ,CAACC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC,CAAC;IAG1C,OAAO,IAAIgB,OAAO,CAACC,OAAO,IAAI;MAC5B,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACZ,OAAO,CAAC;MAC3BU,OAAO,CAACV,OAAO,CAAC;IAClB,CAAC,CAAC;EACJ;EACE,OAAOa,aAAaA,CAACb,OAAgB,EAAyB;IAC5D,OAAOZ,KAAK,CAAC,kCAAkCY,OAAO,CAACJ,EAAE,EAAE,EAC3D;MAACK,MAAM,EAAC,KAAK;MACfC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC;MAC5BK,OAAO,EAAC;QAAC,cAAc,EAAE;MAAkB;IAC7C,CACI,CAAC,CACAhB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAE,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC,CAAC;EAC1C;EAKE,OAAOK,OAAOA,CAACD,IAAY,EAAW;IACpC,OAAOiB,MAAM,CAACC,IAAI,CAAClB,IAAI,CAAC,CAACmB,MAAM,KAAK,CAAC;EACvC;EAEA,OAAOtB,WAAWA,CAACD,KAAY,EAAO;IACxCwB,OAAO,CAACC,GAAG,CAACzB,KAAK,CAAC;EAEhB;EACA,OAAO0B,aAAaA,CAACC,IAAY,EAAsB;IACrD,IAAG,IAAI,CAACC,KAAK,EAAE;MACb,OAAOjC,KAAK,CAAC,oCAAoCgC,IAAI,EAAE,CAAC,CACvD/B,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAI,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC,CAAC;IAC1C;IAEA,OAAO,IAAIgB,OAAO,CAACC,OAAO,IAAI;MAC5B,MAAMY,OAAO,GAAG,IAAI,CAACX,QAAQ,CAACY,MAAM,CAACvB,OAAO,IAAIA,OAAO,CAACwB,IAAI,CAACC,QAAQ,CAACL,IAAI,CAAC,CAAC;MAC5EV,OAAO,CAACY,OAAO,CAAC;IAClB,CAAC,CAAC;EAEJ;AAEF;AAxFqBpC,cAAc,CAE1ByB,QAAQ,GAAa1B,QAAQ;AAFjBC,cAAc,CAI1BmC,KAAK,GAAI,CAACK,OAAO,CAACC,GAAG,CAACC,QAAQ,IAAIF,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}