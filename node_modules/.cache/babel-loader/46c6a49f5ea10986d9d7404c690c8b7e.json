{"ast":null,"code":"import{POKEMONS}from'./../models/mock-pokemon';export default class PokemonService{static getPokemons(){if(this.isDev){return fetch('http://localhost:3001/pokemons').then(response=>response.json()).catch(error=>this.handleError(error));}return new Promise(resolve=>{resolve(this.pokemons);});}static getPokemon(id){if(this.isDev){return fetch(\"http://localhost:3001/pokemons/\".concat(id)).then(response=>response.json()).then(data=>this.isEmpty(data)?null:data).catch(error=>this.handleError(error));}return new Promise(resolve=>{resolve(this.pokemons.find(pokemon=>id===pokemon.id));});}static updatePokemon(pokemon){if(this.isDev){return fetch(\"http://localhost:3001/pokemons/\".concat(pokemon.id),{method:'PUT',body:JSON.stringify(pokemon),headers:{'Content-Type':'application/json'}}).then(response=>response.json()).catch(error=>this.handleError(error));}return new Promise(resolve=>{const{id}=pokemon;const index=this.pokemons.findIndex(pokemon=>pokemon.id===id);this.pokemons[index]=pokemon;resolve(pokemon);});}static deletePokemon(pokemon){if(this.isDev){return fetch(\"http://localhost:3001/pokemons/\".concat(pokemon.id),{method:'DELETE',headers:{'Content-Type':'application/json'}}).then(response=>response.json()).catch(error=>this.handleError(error));}return new Promise(resolve=>{const{id}=pokemon;this.pokemons=this.pokemons.filter(pokemon=>pokemon.id!==id);resolve({});});}static addPokemon(pokemon){if(pokemon.created){delete pokemon.created;}if(this.isDev){return fetch(\"http://localhost:3001/pokemons\",{method:'POST',body:JSON.stringify(pokemon),headers:{'Content-Type':'application/json'}}).then(response=>response.json()).catch(error=>this.handleError(error));}return new Promise(resolve=>{this.pokemons.push(pokemon);resolve(pokemon);});}static searchPokemon(term){if(this.isDev){return fetch(\"http://localhost:3001/pokemons?q=\".concat(term)).then(response=>response.json()).catch(error=>this.handleError(error));}return new Promise(resolve=>{const results=this.pokemons.filter(pokemon=>pokemon.name.includes(term));resolve(results);});}static isEmpty(data){return Object.keys(data).length===0;}static handleError(error){console.error(error);}}PokemonService.pokemons=POKEMONS;PokemonService.isDev=!process.env.NODE_ENV||process.env.NODE_ENV==='development';","map":{"version":3,"names":["POKEMONS","PokemonService","getPokemons","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","getPokemon","id","concat","data","isEmpty","find","pokemon","updatePokemon","method","body","JSON","stringify","headers","index","findIndex","deletePokemon","filter","addPokemon","created","push","searchPokemon","term","results","name","includes","Object","keys","length","console","process","env","NODE_ENV"],"sources":["C:/Users/DELL Gaming/Desktop/REACTJS/formationpokemon/src/services/pokemon-service.ts"],"sourcesContent":["import { POKEMONS } from './../models/mock-pokemon';\nimport Pokemon from \"../models/pokemon\";\n\nexport default class PokemonService {\n\n  static pokemons:Pokemon[] = POKEMONS;\n\n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\n\n  static getPokemons(): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch('http://localhost:3001/pokemons')\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      resolve(this.pokemons);\n    });\n  }\n\n  static getPokemon(id: number): Promise<Pokemon|null> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${id}`)\n      .then(response => response.json())\n      .then(data => this.isEmpty(data) ? null : data)\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      resolve(this.pokemons.find(pokemon => id === pokemon.id));\n    }); \n  }\n\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      const { id } = pokemon;\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\n      this.pokemons[index] = pokemon;\n      resolve(pokemon);\n    }); \n  }\n\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      const { id } = pokemon;\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\n      resolve({});\n    }); \n  }\n\n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n\n    if (pokemon.created) {\n      delete pokemon.created;\n    }\n\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons`, {\n        method: 'POST',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      this.pokemons.push(pokemon);\n      resolve(pokemon);\n    }); \n  }\n\n  static searchPokemon(term: string): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\n      resolve(results);\n    });\n\n  }\n\n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error: Error): void {\n    console.error(error);\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}