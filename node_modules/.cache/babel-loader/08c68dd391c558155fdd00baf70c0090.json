{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL Gaming\\\\Desktop\\\\REACTJS\\\\formationpokemon\\\\src\\\\components\\\\pokemon-form.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport formatType from '../helpers/format-type';\n\n//champ avec une valeur, une errure et si c'est valide\n\n//Répresente le formualire propremet parlé et la liste des champs disponibles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokemonForm = ({\n  pokemon\n}) => {\n  _s();\n  const history = useHistory();\n  const [form, setForm] = useState({\n    picture: {\n      value: pokemon.picture\n    },\n    name: {\n      value: pokemon.name,\n      isValid: true\n    },\n    hp: {\n      value: pokemon.hp,\n      isValid: true\n    },\n    cp: {\n      value: pokemon.cp,\n      isValid: true\n    },\n    types: {\n      value: pokemon.types,\n      isValid: true\n    }\n  });\n  const types = ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol', 'Combat', 'Psy'];\n  //renvoye un boolean verifiant si le type appartient oui ou non\n  const hasType = type => {\n    return form.types.value.includes(type);\n  };\n  const selectType = (type, e) => {\n    const checked = e.target.checked;\n    let newField;\n    if (checked) {\n      // Si l'utilisateur coche un type, à l'ajoute à la liste des types du pokémon.\n      const newTypes = form.types.value.concat([type]);\n      newField = {\n        value: newTypes\n      };\n    } else {\n      // Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon.\n      const newTypes = form.types.value.filter(currentType => currentType !== type);\n      newField = {\n        value: newTypes\n      };\n    }\n    setForm({\n      ...form,\n      ...{\n        types: newField\n      }\n    });\n  };\n  const handleInputChange = e => {\n    const fieldName = e.target.name;\n    const fieldValue = e.target.value;\n    const newField = {\n      [fieldName]: {\n        value: fieldValue\n      }\n    };\n    setForm({\n      ...form,\n      ...newField\n    });\n  };\n  const validateForm = () => {\n    let newForm = form;\n\n    // Validator url\n    /* if(isAddForm()) {\n        const start = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\n       const end = \".png\";\n        if(!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\n         const errorMsg: string = 'L\\'url n\\'est pas valide.';\n         const newField: Field = { value: form.picture.value, error: errorMsg, isValid: false };\n         newForm = { ...newForm, ...{ picture: newField } };\n       } else {\n         const newField: Field = { value: form.picture.value, error: '', isValid: true };\n         newForm = { ...newForm, ...{ picture: newField } };\n       }\n     }\n     */\n\n    // Validator name\n    if (!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n      const errorMsg = 'Le nom du pokémon est requis (1-25).';\n      const newField = {\n        value: form.name.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = {\n        ...newForm,\n        ...{\n          name: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.name.value,\n        error: '',\n        isValid: true\n      };\n      newForm = {\n        ...newForm,\n        ...{\n          name: newField\n        }\n      };\n    }\n\n    // Validator hp\n    if (!/^[0-9]{1,3}$/.test(form.hp.value)) {\n      const errorMsg = 'Les points de vie du pokémon sont compris entre 0 et 999.';\n      const newField = {\n        value: form.hp.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = {\n        ...newForm,\n        ...{\n          hp: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.hp.value,\n        error: '',\n        isValid: true\n      };\n      newForm = {\n        ...newForm,\n        ...{\n          hp: newField\n        }\n      };\n    }\n\n    // Validator cp\n    if (!/^[0-9]{1,2}$/.test(form.cp.value)) {\n      const errorMsg = 'Les dégâts du pokémon sont compris entre 0 et 99';\n      const newField = {\n        value: form.cp.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = {\n        ...newForm,\n        ...{\n          cp: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.cp.value,\n        error: '',\n        isValid: true\n      };\n      newForm = {\n        ...newForm,\n        ...{\n          cp: newField\n        }\n      };\n    }\n    setForm(newForm);\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n  };\n  const isTypesValid = type => {\n    // Cas n°1: Le pokémon a un seul type, qui correspond au type passé en paramètre.\n    // Dans ce cas on revoie false, car l'utilisateur ne doit pas pouvoir décoché ce type (sinon le pokémon aurait 0 type, ce qui est interdit)\n    if (form.types.value.length === 1 && hasType(type)) {\n      return false;\n    }\n\n    // Cas n°1: Le pokémon a au moins 3 types.\n    // Dans ce cas il faut empêcher à l'utilisateur de cocher un nouveau type, mais pas de décocher les types existants.\n    if (form.types.value.length >= 3 && !hasType(type)) {\n      return false;\n    }\n\n    // Après avoir passé les deux tests ci-dessus, on renvoie 'true', \n    // c'est-à-dire que l'on autorise l'utilisateur à cocher ou décocher un nouveau type.\n    return true;\n  };\n\n  /* const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n     e.preventDefault();\n     const isFormValid = validateForm();\n     if(isFormValid) {\n       pokemon.picture = form.picture.value;\n       pokemon.name = form.name.value;\n       pokemon.hp = form.hp.value;\n       pokemon.cp = form.cp.value;\n       pokemon.types = form.types.value;\n       isEditForm ? updatePokemon() : addPokemon();\n     }\n   }\n  */\n\n  /*const isAddForm = (): boolean => {\n    return !isEditForm;\n  }\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col s12 m8 offset-m2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card hoverable\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-image\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: pokemon.picture,\n              alt: pokemon.name,\n              style: {\n                width: '250px',\n                margin: '0 auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn-floating halfway-fab waves-effect waves-light\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-stacked\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"picture\",\n                  children: \"Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"picture\",\n                  type: \"text\",\n                  name: \"picture\",\n                  className: \"form-control\",\n                  value: form.picture.value,\n                  onChange: e => handleInputChange(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, this), form.picture.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-panel red accent-1\",\n                  children: form.picture.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"name\",\n                  children: \"Nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"name\",\n                  type: \"text\",\n                  name: \"name\",\n                  className: \"form-control\",\n                  value: form.name.value,\n                  onChange: e => handleInputChange(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, this), form.name.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-panel red accent-1\",\n                  children: form.name.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"hp\",\n                  children: \"Point de vie\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"hp\",\n                  type: \"number\",\n                  name: \"hp\",\n                  className: \"form-control\",\n                  value: form.hp.value,\n                  onChange: e => handleInputChange(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 19\n                }, this), form.hp.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-panel red accent-1\",\n                  children: form.hp.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"cp\",\n                  children: \"D\\xE9g\\xE2ts\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"cp\",\n                  type: \"number\",\n                  name: \"cp\",\n                  className: \"form-control\",\n                  value: form.cp.value,\n                  onChange: e => handleInputChange(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 19\n                }, this), form.cp.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-panel red accent-1\",\n                  children: form.cp.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Types\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this), types.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: '10px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      id: type,\n                      type: \"checkbox\",\n                      name: \"types\",\n                      className: \"filled-in\",\n                      value: type,\n                      checked: hasType(type),\n                      disabled: !isTypesValid(type),\n                      onChange: e => selectType(type, e)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: formatType(type),\n                        children: type\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 227,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 23\n                  }, this)\n                }, type, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-action center\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn\",\n                children: \"Valider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(PokemonForm, \"hkjByC98AXbAJv7Wlsyf7NAZO1w=\", false, function () {\n  return [useHistory];\n});\n_c = PokemonForm;\nexport default PokemonForm;\nvar _c;\n$RefreshReg$(_c, \"PokemonForm\");","map":{"version":3,"names":["React","useState","useHistory","formatType","jsxDEV","_jsxDEV","PokemonForm","pokemon","_s","history","form","setForm","picture","value","name","isValid","hp","cp","types","hasType","type","includes","selectType","e","checked","target","newField","newTypes","concat","filter","currentType","handleInputChange","fieldName","fieldValue","validateForm","newForm","test","errorMsg","error","isTypesValid","length","children","className","src","alt","style","width","margin","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","map","marginBottom","disabled","_c","$RefreshReg$"],"sources":["C:/Users/DELL Gaming/Desktop/REACTJS/formationpokemon/src/components/pokemon-form.tsx"],"sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatType from '../helpers/format-type';\n\ntype Props = {\n  pokemon: Pokemon,\n  //isEditForm: boolean\n};\n//champ avec une valeur, une errure et si c'est valide\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n};\n//Répresente le formualire propremet parlé et la liste des champs disponibles\ntype Form = {\n  picture: Field,\n  name: Field,\n  hp: Field,\n  cp: Field,\n  types: Field\n}\n\nconst PokemonForm: FunctionComponent<Props> = ({pokemon}) => {\n\n  const history = useHistory();\n\n  const [form, setForm] = useState<Form>({\n    picture: { value: pokemon.picture },\n    name: { value: pokemon.name, isValid: true },\n    hp: { value: pokemon.hp, isValid: true },\n    cp: { value: pokemon.cp, isValid: true },\n    types: { value: pokemon.types, isValid: true }\n  });\n\n  const types: string[] = [\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\n  ];\n//renvoye un boolean verifiant si le type appartient oui ou non\n  const hasType = (type: string): boolean => {\n    return form.types.value.includes(type);\n  }\n\n  const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\n    const checked = e.target.checked;\n    let newField: Field;\n\n    if(checked) {\n      // Si l'utilisateur coche un type, à l'ajoute à la liste des types du pokémon.\n      const newTypes: string[] = form.types.value.concat([type]);\n      newField = { value: newTypes };\n    } else {\n      // Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon.\n      const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\n      newField = { value: newTypes };\n    }\n\n    setForm({...form, ...{ types: newField }});\n  }\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue } };\n\n    setForm({ ...form, ...newField});\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator url\n   /* if(isAddForm()) {\n\n      const start = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\n      const end = \".png\";\n\n      if(!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\n        const errorMsg: string = 'L\\'url n\\'est pas valide.';\n        const newField: Field = { value: form.picture.value, error: errorMsg, isValid: false };\n        newForm = { ...newForm, ...{ picture: newField } };\n      } else {\n        const newField: Field = { value: form.picture.value, error: '', isValid: true };\n        newForm = { ...newForm, ...{ picture: newField } };\n      }\n    }\n    */\n\n    // Validator name\n    if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n      const errorMsg: string = 'Le nom du pokémon est requis (1-25).';\n      const newField: Field = { value: form.name.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ name: newField } };\n    } else {\n      const newField: Field = { value: form.name.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ name: newField } };\n    }\n\n    // Validator hp\n    if(!/^[0-9]{1,3}$/.test(form.hp.value)) {\n      const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.';\n      const newField: Field = {value: form.hp.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ hp: newField } };\n    } else {\n      const newField: Field = { value: form.hp.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ hp: newField } };\n    }\n\n    // Validator cp\n    if(!/^[0-9]{1,2}$/.test(form.cp.value)) {\n      const errorMsg: string = 'Les dégâts du pokémon sont compris entre 0 et 99';\n      const newField: Field = {value: form.cp.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ cp: newField } };\n    } else {\n      const newField: Field = { value: form.cp.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ cp: newField } };\n    }\n\n    setForm(newForm);\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n  }\n\n  const isTypesValid = (type: string): boolean => {\n    // Cas n°1: Le pokémon a un seul type, qui correspond au type passé en paramètre.\n    // Dans ce cas on revoie false, car l'utilisateur ne doit pas pouvoir décoché ce type (sinon le pokémon aurait 0 type, ce qui est interdit)\n    if (form.types.value.length === 1 && hasType(type)) {\n      return false;\n    }\n    \n    // Cas n°1: Le pokémon a au moins 3 types.\n    // Dans ce cas il faut empêcher à l'utilisateur de cocher un nouveau type, mais pas de décocher les types existants.\n    if (form.types.value.length >= 3 && !hasType(type)) { \n      return false; \n    } \n    \n    // Après avoir passé les deux tests ci-dessus, on renvoie 'true', \n    // c'est-à-dire que l'on autorise l'utilisateur à cocher ou décocher un nouveau type.\n    return true;\n  }\n\n /* const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n    if(isFormValid) {\n      pokemon.picture = form.picture.value;\n      pokemon.name = form.name.value;\n      pokemon.hp = form.hp.value;\n      pokemon.cp = form.cp.value;\n      pokemon.types = form.types.value;\n      isEditForm ? updatePokemon() : addPokemon();\n    }\n  }\n*/\n \n\n  /*const isAddForm = (): boolean => {\n    return !isEditForm;\n  }\n*/\n \n\n\n  return (\n    <form>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\"> \n          \n            <div className=\"card-image\">\n              <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n              <span className=\"btn-floating halfway-fab waves-effect waves-light\">\n              </span>\n            </div>\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Pokemon picture */}\n               \n                  <div className=\"form-group\">\n                    <label htmlFor=\"picture\">Image</label>\n                    <input id=\"picture\" type=\"text\" name=\"picture\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)}></input>\n                    {/* error */}\n                    {form.picture.error &&\n                      <div className=\"card-panel red accent-1\"> \n                    {form.picture.error} \n                  </div>} \n                </div>\n                {/* Pokemon name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Nom</label>\n                  <input id=\"name\" type=\"text\" name=\"name\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.name.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.name.error} \n                  </div>} \n                </div>\n                {/* Pokemon hp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"hp\">Point de vie</label>\n                  <input id=\"hp\" type=\"number\" name=\"hp\" className=\"form-control\" value={form.hp.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.hp.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.hp.error}\n                  </div>} \n                </div>\n                {/* Pokemon cp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"cp\">Dégâts</label>\n                  <input id=\"cp\" type=\"number\" name=\"cp\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.cp.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.cp.error}\n                  </div>} \n                </div>\n                {/* Pokemon types */}\n                <div className=\"form-group\">\n                  <label>Types</label>\n                  {types.map(type => (\n                    <div key={type} style={{marginBottom: '10px'}}>\n                      <label>\n                        <input id={type} type=\"checkbox\" name=\"types\" className=\"filled-in\" value={type} checked={hasType(type)} disabled={!isTypesValid(type)} onChange={e => selectType(type, e)}></input>\n                        <span>\n                          <p className={formatType(type)}>{ type }</p>\n                        </span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n \nexport default PokemonForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}