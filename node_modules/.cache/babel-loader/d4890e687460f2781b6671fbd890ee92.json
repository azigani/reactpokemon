{"ast":null,"code":"import POKEMONS from \"../models/mock-pokemon\";\nexport default class PokemonService {\n  static getPokemons() {\n    return fetch('http://localhost:3001/pokemons').then(response => response.json()).catch(error => this.handleError(error));\n  }\n  static getPokemon(id) {\n    return fetch(`http://localhost:3001/pokemons/${id}`).then(response => response.json()).then(data => this.isEmpty(data) ? null : data).catch(error => this.handleError(error));\n  }\n  static updatePokemon(pokemon) {\n    return fetch(`http://localhost:3001/pokemons/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(pokemon),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n  static isEmpty(data) {\n    return Object.keys(data).length === 0;\n  }\n  static handleError(error) {\n    console.log(error);\n  }\n}\nPokemonService.pokemons = POKEMONS;\nPokemonService.isDev = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';","map":{"version":3,"names":["POKEMONS","PokemonService","getPokemons","fetch","then","response","json","catch","error","handleError","getPokemon","id","data","isEmpty","updatePokemon","pokemon","method","body","JSON","stringify","headers","Object","keys","length","console","log","pokemons","isDev","process","env","NODE_ENV"],"sources":["C:/Users/DELL Gaming/Desktop/REACTJS/formationpokemon/src/services/pokemon-service.ts"],"sourcesContent":["import Pokemon from \"../models/pokemon\";\nimport POKEMONS from \"../models/mock-pokemon\";\nimport { error } from \"console\";\nimport { METHODS } from \"http\";\n\nexport default class PokemonService {\n\n  static pokemons:Pokemon[] = POKEMONS;\n\n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\n\n  static getPokemons(): Promise<Pokemon[]> {\n      return fetch('http://localhost:3001/pokemons')\n      .then(response => response.json())\n      .catch(error=>this.handleError(error));\n    }\n\n  static getPokemon(id: number): Promise<Pokemon|null> {\n      return fetch(`http://localhost:3001/pokemons/${id}`)\n      .then(response => response.json())\n      .then(data => this.isEmpty(data) ? null : data)\n      .catch(error=>this.handleError(error));\n  }   \n\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon|null> {\n    return fetch(`http://localhost:3001/pokemons/${id}`,\n    {method:'PUT',\n  body:JSON.stringify(pokemon),\n  headers:{'Content-Type': 'application/json'}\n}\n    )\n    .then(response => response.json())\n    .catch(error=>this.handleError(error));\n}  \n\n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error: Error) :void{\nconsole.log(error);\n\n  }\n\n}"],"mappings":"AACA,OAAOA,QAAQ,MAAM,wBAAwB;AAI7C,eAAe,MAAMC,cAAc,CAAC;EAMlC,OAAOC,WAAWA,CAAA,EAAuB;IACrC,OAAOC,KAAK,CAAC,gCAAgC,CAAC,CAC7CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAE,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC,CAAC;EACxC;EAEF,OAAOE,UAAUA,CAACC,EAAU,EAAyB;IACjD,OAAOR,KAAK,CAAC,kCAAkCQ,EAAE,EAAE,CAAC,CACnDP,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACQ,IAAI,IAAI,IAAI,CAACC,OAAO,CAACD,IAAI,CAAC,GAAG,IAAI,GAAGA,IAAI,CAAC,CAC9CL,KAAK,CAACC,KAAK,IAAE,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC,CAAC;EAC1C;EAEA,OAAOM,aAAaA,CAACC,OAAgB,EAAyB;IAC5D,OAAOZ,KAAK,CAAC,kCAAkCQ,EAAE,EAAE,EACnD;MAACK,MAAM,EAAC,KAAK;MACfC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC;MAC5BK,OAAO,EAAC;QAAC,cAAc,EAAE;MAAkB;IAC7C,CACI,CAAC,CACAhB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAE,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC,CAAC;EAC1C;EAEE,OAAOK,OAAOA,CAACD,IAAY,EAAW;IACpC,OAAOS,MAAM,CAACC,IAAI,CAACV,IAAI,CAAC,CAACW,MAAM,KAAK,CAAC;EACvC;EAEA,OAAOd,WAAWA,CAACD,KAAY,EAAO;IACxCgB,OAAO,CAACC,GAAG,CAACjB,KAAK,CAAC;EAEhB;AAEF;AAvCqBP,cAAc,CAE1ByB,QAAQ,GAAa1B,QAAQ;AAFjBC,cAAc,CAI1B0B,KAAK,GAAI,CAACC,OAAO,CAACC,GAAG,CAACC,QAAQ,IAAIF,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}