{"ast":null,"code":"const formatType = type => {\n  let color;\n  switch (type) {\n    case 'Feu':\n      color = 'red lighten-1';\n      break;\n    case 'Eau':\n      color = 'blue lighten-1';\n      break;\n    case 'Plante':\n      color = 'green lighten-1';\n      break;\n    case 'Insecte':\n      color = 'brown lighten-1';\n      break;\n    case 'Normal':\n      color = 'grey lighten-3';\n      break;\n    case 'Vol':\n      color = 'blue lighten-3';\n      break;\n    case 'Poison':\n      color = 'deep-purple accent-1';\n      break;\n    case 'Fée':\n      color = 'pink lighten-4';\n      break;\n    case 'Psy':\n      color = 'deep-purple darken-2';\n      break;\n    case 'Electrik':\n      color = 'lime accent-1';\n      break;\n    case 'Combat':\n      color = 'deep-orange';\n      break;\n    default:\n      color = 'grey';\n      break;\n  }\n  return `chip ${color}`;\n};\nexport default formatType;","map":{"version":3,"names":["formatType","type","color"],"sources":["C:/Users/DELL Gaming/Desktop/REACTJS/formationpokemon/src/helpers/format-type.ts"],"sourcesContent":["const formatType = (type: string): string => {\n\tlet color: string;\n\n\tswitch (type) {\n    case 'Feu': \n    \tcolor = 'red lighten-1'; \n    \tbreak; \n    case 'Eau': \n    \tcolor = 'blue lighten-1'; \n    \tbreak; \n    case 'Plante': \n    \tcolor = 'green lighten-1'; \n    \tbreak; \n    case 'Insecte': \n    \tcolor = 'brown lighten-1'; \n    \tbreak; \n    case 'Normal': \n    \tcolor = 'grey lighten-3'; \n    \tbreak; \n    case 'Vol': \n    \tcolor = 'blue lighten-3'; \n    \tbreak; \n    case 'Poison': \n    \tcolor = 'deep-purple accent-1'; \n    \tbreak; \n    case 'Fée': \n    \tcolor = 'pink lighten-4'; \n    \tbreak; \n    case 'Psy': \n    \tcolor = 'deep-purple darken-2'; \n    \tbreak; \n    case 'Electrik': \n    \tcolor = 'lime accent-1'; \n    \tbreak; \n    case 'Combat': \n    \tcolor = 'deep-orange'; \n    \tbreak; \n    default: \n    \tcolor = 'grey'; \n    \tbreak; \n\t}\n\n\treturn `chip ${color}`;\n}\n\nexport default formatType;"],"mappings":"AAAA,MAAMA,UAAU,GAAIC,IAAY,IAAa;EAC5C,IAAIC,KAAa;EAEjB,QAAQD,IAAI;IACT,KAAK,KAAK;MACTC,KAAK,GAAG,eAAe;MACvB;IACD,KAAK,KAAK;MACTA,KAAK,GAAG,gBAAgB;MACxB;IACD,KAAK,QAAQ;MACZA,KAAK,GAAG,iBAAiB;MACzB;IACD,KAAK,SAAS;MACbA,KAAK,GAAG,iBAAiB;MACzB;IACD,KAAK,QAAQ;MACZA,KAAK,GAAG,gBAAgB;MACxB;IACD,KAAK,KAAK;MACTA,KAAK,GAAG,gBAAgB;MACxB;IACD,KAAK,QAAQ;MACZA,KAAK,GAAG,sBAAsB;MAC9B;IACD,KAAK,KAAK;MACTA,KAAK,GAAG,gBAAgB;MACxB;IACD,KAAK,KAAK;MACTA,KAAK,GAAG,sBAAsB;MAC9B;IACD,KAAK,UAAU;MACdA,KAAK,GAAG,eAAe;MACvB;IACD,KAAK,QAAQ;MACZA,KAAK,GAAG,aAAa;MACrB;IACD;MACCA,KAAK,GAAG,MAAM;MACd;EACJ;EAEA,OAAO,QAAQA,KAAK,EAAE;AACvB,CAAC;AAED,eAAeF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}