{"version":3,"sources":["helpers/format-type.ts","components/pokemon-card.tsx","models/mock-pokemon.ts","services/pokemon-service.ts","components/pokemon-search.tsx","pages/pokemon-list.tsx","helpers/format-date.ts","components/loader.tsx","pages/pokemon-detail.tsx","pages/page-not-found.tsx","components/pokemon-form.tsx","pages/pokemon-edit.tsx","models/pokemon.ts","pages/pokemon-add.tsx","services/authentication-service.ts","pages/login.tsx","PrivateRoute.tsx","App.tsx","index.tsx"],"names":["formatType","type","color","concat","PokemonCard","_ref","pokemon","borderColor","setColor","useState","history","useHistory","_jsx","className","onClick","goToPokemon","id","push","onMouseEnter","showBorder","onMouseLeave","hideBorder","children","_jsxs","style","src","picture","alt","name","types","map","POKEMONS","hp","cp","created","Date","PokemonService","getPokemons","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","getPokemon","data","isEmpty","find","updatePokemon","method","body","JSON","stringify","headers","index","findIndex","deletePokemon","filter","addPokemon","searchPokemon","term","includes","Object","keys","length","console","process","PokemonSearch","setTerm","setPokemons","placeholder","value","onChange","e","target","handleInputChange","Link","to","PokemonList","useEffect","position","bottom","right","formatDate","date","arguments","undefined","getDate","getMonth","getFullYear","Loader","PokemonsDetail","match","setPokemon","params","width","margin","PageNotFound","PokemonForm","isEditForm","hasType","form","setForm","isValid","fieldName","newField","isAddForm","validateForm","newForm","start","end","startsWith","endsWith","errorMsg","test","isTypeValid","onSubmit","preventDefault","isFormValid","log","handleSubmit","htmlFor","marginBottom","checked","selectType","currentType","disabled","PokemonEdit","Pokemon","constructor","PokemonAdd","getTime","AuthenticationService","login","username","password","isAuthenticated","setTimeout","Login","message","setMessage","fieldValue","PrivateRoute","component","Component","rest","Route","render","props","Redirect","pathname","App","Router","Switch","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7d862cac.chunk.js","sourcesContent":["const formatType = (type: string): string => {\n\tlet color: string;\n\n\tswitch (type) {\n    case 'Feu': \n    \tcolor = 'red lighten-1'; \n    \tbreak; \n    case 'Eau': \n    \tcolor = 'blue lighten-1'; \n    \tbreak; \n    case 'Plante': \n    \tcolor = 'green lighten-1'; \n    \tbreak; \n    case 'Insecte': \n    \tcolor = 'brown lighten-1'; \n    \tbreak; \n    case 'Normal': \n    \tcolor = 'grey lighten-3'; \n    \tbreak; \n    case 'Vol': \n    \tcolor = 'blue lighten-3'; \n    \tbreak; \n    case 'Poison': \n    \tcolor = 'deep-purple accent-1'; \n    \tbreak; \n    case 'Fée': \n    \tcolor = 'pink lighten-4'; \n    \tbreak; \n    case 'Psy': \n    \tcolor = 'deep-purple darken-2'; \n    \tbreak; \n    case 'Electrik': \n    \tcolor = 'lime accent-1'; \n    \tbreak; \n    case 'Combat': \n    \tcolor = 'deep-orange'; \n    \tbreak; \n    default: \n    \tcolor = 'grey'; \n    \tbreak; \n\t}\n\n\treturn `chip ${color}`;\n}\n\nexport default formatType;","import React, { FunctionComponent, useState } from 'react';\n//import { useHistory } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport './pokemon-card.css';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport { useHistory } from 'react-router-dom';\n\ntype Props = {\n  pokemon: Pokemon,\n  borderColor?:string\n};\n\nconst PokemonCard: FunctionComponent <Props>= ({pokemon, borderColor='#009688'}) => {\n  const [color, setColor] = useState<string>();\n  const history= useHistory();\n\n\n  const showBorder = () => {\n    setColor(borderColor);\n  };\n \n  const hideBorder = () => {\n    setColor('#f5f5f5');\n  };\n \n  const goToPokemon = (id: number) => {\n    history.push(`/pokemons/${id}`);\n  }\n \n /*\n  const history = useHistory();\n \n\n\n  const goToPokemon = (id: number) => {\n    history.push(`/pokemons/${id}`);\n  }\n */\n  return (\n    <div className=\"col s6 m4\" onClick={()=>goToPokemon(pokemon.id)} onMouseEnter={showBorder} onMouseLeave={hideBorder}>\n      <div className=\"card horizontal\" style={{borderColor:borderColor}}>\n        <div className=\"card-image\"> \n          <img src={pokemon.picture} alt={pokemon.name}/>\n        </div>\n        <div className=\"card-stacked\">\n          <div className=\"card-content\">\n            <p>{pokemon.name}</p>\n          {pokemon.types.map(type=>{\n            <span key={type} className={formatType(type)}>{type}</span>\n          })}\n          </div>\n        </div>\n      </div> \n    </div>\n  );\n}\n \nexport default PokemonCard;","import Pokemon from './pokemon';\r\n   \r\nexport const POKEMONS: Pokemon[] = [\r\n {\r\n  id: 1,\r\n  name: \"Bulbizarre\",\r\n  hp: 25,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\r\n  types: [\"Plante\", \"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 2,\r\n  name: \"Salamèche\",\r\n  hp: 28,\r\n  cp: 6,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\r\n  types: [\"Feu\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 3,\r\n  name: \"Carapuce\",\r\n  hp: 21,\r\n  cp: 4,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\r\n  types: [\"Eau\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 4,\r\n  name: \"Aspicot\",\r\n  hp: 16,\r\n  cp: 2,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\r\n  types: [\"Insecte\", \"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 5,\r\n  name: \"Roucool\",\r\n  hp: 30,\r\n  cp: 7,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\r\n  types: [\"Normal\", \"Vol\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 6,\r\n  name: \"Rattata\",\r\n  hp: 18,\r\n  cp: 6,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\r\n  types: [\"Normal\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 7,\r\n  name: \"Piafabec\",\r\n  hp: 14,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\r\n  types: [\"Normal\", \"Vol\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 8,\r\n  name: \"Abo\",\r\n  hp: 16,\r\n  cp: 4,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\r\n  types: [\"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 9,\r\n  name: \"Pikachu\",\r\n  hp: 21,\r\n  cp: 7,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\r\n  types: [\"Electrik\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 10,\r\n  name: \"Sabelette\",\r\n  hp: 19,\r\n  cp: 3,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\r\n  types: [\"Normal\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 11,\r\n  name: \"Mélofée\",\r\n  hp: 25,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\r\n  types: [\"Fée\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 12,\r\n  name: \"Groupix\",\r\n  hp: 17,\r\n  cp: 8,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\r\n  types: [\"Feu\"],\r\n  created: new Date()\r\n }\r\n];\r\n  \r\nexport default POKEMONS;","import { POKEMONS } from './../models/mock-pokemon';\nimport Pokemon from \"../models/pokemon\";\n\nexport default class PokemonService {\n\n  static pokemons:Pokemon[] = POKEMONS;\n\n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\n\n  static getPokemons(): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch('http://localhost:3001/pokemons')\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      resolve(this.pokemons);\n    });\n  }\n\n  static getPokemon(id: number): Promise<Pokemon|null> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${id}`)\n      .then(response => response.json())\n      .then(data => this.isEmpty(data) ? null : data)\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      resolve(this.pokemons.find(pokemon => id === pokemon.id));\n    }); \n  }\n\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      const { id } = pokemon;\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\n      this.pokemons[index] = pokemon;\n      resolve(pokemon);\n    }); \n  }\n\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      const { id } = pokemon;\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\n      resolve({});\n    }); \n  }\n\n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n\n    if (pokemon.created) {\n      delete pokemon.created;\n    }\n\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons`, {\n        method: 'POST',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      this.pokemons.push(pokemon);\n      resolve(pokemon);\n    }); \n  }\n\n  static searchPokemon(term: string): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\n      resolve(results);\n    });\n\n  }\n\n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error: Error): void {\n    console.error(error);\n  }\n}","import React, { FunctionComponent, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\n\nconst PokemonSearch: FunctionComponent = () => {\n \n  const [term, setTerm] = useState<string>('');\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const term = e.target.value;\n    setTerm(term);\n\n    if(term.length <= 1) {\n      setPokemons([]);\n      return;\n    }\n\n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\n  }\n \n  return (\n    <div className=\"row\"> \n    <div className=\"col s12 m6 offset-m3\"> \n      <div className=\"card\"> \n      <div className=\"card-content\"> \n        <div className=\"input-field\"> \n        <input type=\"text\" placeholder=\"Rechercher un pokémon\" value={term} onChange={e => handleInputChange(e)} /> \n        </div> \n        <div className='collection'>\n        {pokemons.map((pokemon) => (\n          <Link key={pokemon.id} to={`/pokemons/${pokemon.id}`} className=\"collection-item\">\n            {pokemon.name}\n          </Link>\n        ))}\n        </div> \n      </div> \n      </div> \n    </div> \n    </div>\n  );\n}\n \nexport default PokemonSearch;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport Pokemon from '../models/pokemon';\nimport PokemonCard from '../components/pokemon-card';\n//import POKEMONS from '../models/mock-pokemon';\nimport PokemonService from '../services/pokemon-service';\nimport { Link } from 'react-router-dom';\nimport PokemonSearch from '../components/pokemon-search';\n\nconst PokemonList: FunctionComponent = () => {\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n\n  useEffect(() => {\n   /* fetch(`http://localhost:3001/pokemons`)\n    .then(response =>response.json())\n    .then((pokemons)=>{\n      setPokemons(pokemons)\n    })\n    */\n   PokemonService.getPokemons().then(pokemons=>setPokemons(pokemons));\n  }, []);\n  \n  return (\n    <div>\n      <h1 className=\"center\">Pokédex</h1>\n      <div className=\"container\"> \n   \n        <div className=\"row\">\n        <PokemonSearch />\n          {pokemons.map(pokemon => (\n            <PokemonCard key={pokemon.id} pokemon={pokemon}/>\n          ))}\n        </div>\n        <Link className=\"btn-floating btn-large waves-effect waves-light red z-depth-3\"\n        style={{position: 'fixed', bottom: '25px', right: '25px'}}\n        to=\"/pokemon/add\">\n        <i className=\"material-icons\">add</i>\n      </Link>  \n      </div>\n  \n    </div> \n  );\n}\n\nexport default PokemonList;\n\n\n","const formatDate = (date: Date = new Date()): string => {\n  return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\n}\n   \nexport default formatDate;","import React, { FunctionComponent } from 'react';\n\nconst Loader: FunctionComponent = () => {\n \n  return (\n    <div className=\"preloader-wrapper big active\"> \n      <div className=\"spinner-layer spinner-blue\"> \n        <div className=\"circle-clipper left\"> \n          <div className=\"circle\"></div> \n        </div>\n        <div className=\"gap-patch\"> \n          <div className=\"circle\"></div> \n        </div><div className=\"circle-clipper right\"> \n          <div className=\"circle\"></div> \n        </div>\n      </div> \n   </div> \n  );\n}\n \nexport default Loader;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\n//import POKEMONS from '../models/mock-pokemon';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../services/pokemon-service';\nimport Loader from '../components/loader';\n  \ntype Params = { id: string };\n  \nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n  \n  useEffect(() => {\n    /*fetch(`http://localhost:3001/pokemons/${match.params.id}`)\n      .then(response => response.json())\n      .then(pokemon => {\n        if (pokemon.id) setPokemon(pokemon);\n      });\n      */\n\n      PokemonService.getPokemon(+match.params.id).then(pokemon=>setPokemon(pokemon));\n  }, [match.params.id]);\n    \n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n          <div className=\"col s12 m8 offset-m2\"> \n            <h2 className=\"header center\">{ pokemon.name }</h2>\n            <div className=\"card hoverable\"> \n              <div className=\"card-image\">\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n                <Link to={`/pokemons/edit/${pokemon.id}`} className=\"btn btn-floating halfway-fab waves-effect waves-light\">\n                <i className=\"material-icons\">edit</i>\n              </Link>\n              </div>\n             \n              <div className=\"card-stacked\">\n                <div className=\"card-content\">\n                  <table className=\"bordered striped\">\n                    <tbody>\n                      <tr> \n                        <td>Nom</td> \n                        <td><strong>{ pokemon.name }</strong></td> \n                      </tr>\n                      <tr> \n                        <td>Points de vie</td> \n                        <td><strong>{ pokemon.hp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Dégâts</td> \n                        <td><strong>{ pokemon.cp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Types</td> \n                        <td>\n                          {pokemon.types.map(type => (\n                           <span key={type} className={formatType(type)}>{type}</span>\n                          ))}</td> \n                      </tr> \n                      <tr> \n                        <td>Date de création</td> \n                        <td>{formatDate(pokemon.created)}</td> \n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"card-action\">\n                  <Link to=\"/\">Retour</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader/></h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonsDetail;","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PageNotFound: FunctionComponent = () => {\n\n  return (\n    <div className=\"center\">\n      <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\" alt=\"Page non trouvée\"/>\n      <h1>Cette page n'existe pas !</h1> \n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\n        Retourner à l'accueil\n      </Link>\n    </div>\n  );\n}\n\nexport default PageNotFound;","import React, { FunctionComponent, useState } from 'react';\nimport Pokemon from '../models/pokemon';\nimport formatType from '../helpers/format-type';\nimport { useHistory } from 'react-router-dom';\nimport PokemonService from '../services/pokemon-service';\n  \ntype Props = {\n  pokemon: Pokemon,\n  isEditForm: boolean\n};\ntype Field = {\n  value: any;\n  error?: string;\n  isValid?: boolean;\n}\n\ntype Form = {\n  picture: Field;\n  name: Field;\n  hp: Field;\n  cp: Field;\n  types: Field;\n}\n\n\nconst PokemonForm: FunctionComponent<Props> = ({pokemon,isEditForm}) => {\n  const history = useHistory();\n\n  const types: string[] = [\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\n  ];\n  const hasType = (type:string): boolean=>{\n  return form.types.value.includes(type);\n  }\n  \n    const [form, setForm] = useState<Form>({\n      picture: { value: pokemon.picture, isValid: true },\n      name: { value: pokemon.name, isValid: true },\n      hp: { value: pokemon.hp, isValid: true },\n      cp: { value: pokemon.cp, isValid: true },\n      types: { value: pokemon.types, isValid: true },\n    });\n\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const fieldName: string = e.target.name; // utiliser le name ici dans le dom virtuel\n      const fieldValue: string = e.target.value;\n      const newField: Field = { value: fieldValue };\n    \n      // copie de la form avec les modifications effectuées\n      setForm({\n        ...form,\n        [fieldName]: newField\n      });\n    };\n\n/**\n * \n * @param type \n * @param e \n * verification de la case si coché ou pas \n * concat permet de fusionner \n * filter \n */\n    const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\n      const checked = e.target.checked;\n      let newField: Field;\n  \n      if(checked) {\n        // Si l'utilisateur coche un type, on  l'ajoute à la liste des types du pokémon.\n        const newTypes: string[] = form.types.value.concat([type]);\n        newField = { value: newTypes };\n      } else {\n        // Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon.\n        const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\n        newField = { value: newTypes };\n      }\n  \n      setForm({...form, ...{ types: newField }});\n    }\n/**\n * \n * @param e \n */\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      const isFormValid= validateForm();\n     console.log(form);\n     if(isFormValid){\n      pokemon.picture = form.picture.value;\n      pokemon.name = form.name.value;\n      pokemon.hp = form.hp.value;\n      pokemon.cp = form.cp.value;\n      pokemon.types = form.types.value;\n      isEditForm? updatePokemon(): addPokemon();\n     // PokemonService.updatePokemon(pokemon).then(()=> history.push(`/pokemons/${pokemon.id}`));\n     }\n\n      }\n\n      const isAddForm = (): boolean => {\n        return !isEditForm;\n      }\n\n      const validateForm = () => {\n        let newForm: Form = form;\n\n         // Validator url\n    if(isAddForm()) {\n\n      const start = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\n      const end = \".png\";\n\n      if(!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\n        const errorMsg: string = 'L\\'url n\\'est pas valide.';\n        const newField: Field = { value: form.picture.value, error: errorMsg, isValid: false };\n        newForm = { ...newForm, ...{ picture: newField } };\n      } else {\n        const newField: Field = { value: form.picture.value, error: '', isValid: true };\n        newForm = { ...newForm, ...{ picture: newField } };\n      }\n    }\n        // Validator name\n        if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n          const errorMsg: string = 'Le nom du pokémon est requis (1-25).';\n          const newField: Field = { value: form.name.value, error: errorMsg, isValid: false };\n          newForm = { ...newForm, ...{ name: newField } };\n        } else {\n          const newField: Field = { value: form.name.value, error: '', isValid: true };\n          newForm = { ...newForm, ...{ name: newField } };\n        }\n    \n        // Validator hp\n        if(!/^[0-9]{1,3}$/.test(form.hp.value)) {\n          const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.';\n          const newField: Field = {value: form.hp.value, error: errorMsg, isValid: false};\n          newForm = { ...newForm, ...{ hp: newField } };\n        } else {\n          const newField: Field = { value: form.hp.value, error: '', isValid: true };\n          newForm = { ...newForm, ...{ hp: newField } };\n        }\n    \n        // Validator cp\n        if(!/^[0-9]{1,2}$/.test(form.cp.value)) {\n          const errorMsg: string = 'Les dégâts du pokémon sont compris entre 0 et 99';\n          const newField: Field = {value: form.cp.value, error: errorMsg, isValid: false};\n          newForm = { ...newForm, ...{ cp: newField } };\n        } else {\n          const newField: Field = { value: form.cp.value, error: '', isValid: true };\n          newForm = { ...newForm, ...{ cp: newField } };\n        }\n    \n        setForm(newForm);\n        return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n      } \n\n      const isTypeValid =(type: string): boolean=>{\n        /** empêcher de déselectionner une case coché */\n        if(form.types.value.length===1 && hasType(type)){\n          return false;\n        }\n\n        if(form.types.value.length>=3 && !hasType(type)){\n          return false;\n        }\n        return true;  \n      }\n/**\n * suppresion\n */\n      const deletePokemon = () => {\n        PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`));\n      }\n\n      const addPokemon = () => {\n        PokemonService.addPokemon(pokemon).then(() => history.push(`/pokemons`));\n      }\n    \n      const updatePokemon = () => {\n        PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\n      }\n\n  return (\n    <form onSubmit={e=>handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\"> \n          {isEditForm &&(  <div className=\"card-image\">\n              <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n           <span className=\"btn-floating halfway-fab waves-effect waves-light\">\n                <i onClick={deletePokemon} className=\"material-icons\">delete</i>\n              </span>\n            </div>)\n            \n          }\n          \n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n              {isAddForm() && (\n                  <div className=\"form-group\">\n                    <label htmlFor=\"picture\">Image</label>\n                    <input id=\"picture\" type=\"text\" name=\"picture\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)}></input>\n                    {/* error */}\n                    {form.picture.error &&\n                      <div className=\"card-panel red accent-1\"> \n                    {form.picture.error} \n                  </div>\n                  } \n                </div>\n                )}\n                {/* Pokemon name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Nom</label>\n                  <input id=\"name\"   type=\"text\" className=\"form-control\" value={form.name.value}\n                   name=\"name\" onChange={e=>handleInputChange(e)}></input>\n                   {form.name.error && \n                  <div className=\"card-panel red accent-1\">\n                    {form.name.error}\n                  </div>\n                  }\n                </div>\n                {/* Pokemon hp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"hp\">Point de vie</label>\n                  <input id=\"hp\" type=\"number\" className=\"form-control\" value={form.hp.value}\n                  name=\"hp\" onChange={e=>handleInputChange(e)}></input>\n                    {form.hp.error && \n                  <div className=\"card-panel red accent-1\">\n                      {form.hp.error}\n                  </div>\n                  }\n                </div>\n                {/* Pokemon cp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"cp\">Dégâts</label>\n                  <input id=\"cp\" type=\"number\" className=\"form-control\" value={form.cp.value}\n                  name=\"cp\" onChange={e=>handleInputChange(e)}></input>\n                    {form.cp.error && \n                  <div className=\"card-panel red accent-1\">\n                      {form.cp.error}\n                  </div>\n                  }\n                </div>\n                {/* Pokemon types */}\n                <div className=\"form-group\">\n                  <label>Types</label>\n                  {types.map(type => (\n                    <div key={type} style={{marginBottom: '10px'}}>\n                      <label>\n                        <input id={type} type=\"checkbox\" className=\"filled-in\" value={type\n                        } checked={hasType(type)} onChange={e => selectType(type, e)}\n                        disabled={!isTypeValid(type)}></input>\n                        <span>\n                          <p className={formatType(type)}>{ type }</p>\n                        </span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n   \nexport default PokemonForm;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Loader from '../components/loader';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\n//import POKEMONS from '../models/mock-pokemon';\nimport PokemonService from '../services/pokemon-service';\n \ntype Params = { id: string };\n  \nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n  \n /* useEffect(() => {\n    POKEMONS.forEach(pokemon => {\n      if (match.params.id === pokemon.id.toString()) {\n        setPokemon(pokemon);\n      }\n    })\n  }, [match.params.id]);\n    */\n\n  useEffect(() => {\n   /* fetch(`http://localhost:3001/pokemons/${match.params.id}`)\n      .then(response => response.json())\n      .then(pokemon => {\n        if (pokemon.id) setPokemon(pokemon);\n      });\n      */\n      PokemonService.getPokemon(+match.params.id).then(pokemon=>setPokemon(pokemon));\n  }, [match.params.id]);\n  \n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n            <h2 className=\"header center\">Éditer { pokemon.name }</h2>\n            <PokemonForm pokemon={pokemon} isEditForm={true}></PokemonForm>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader/></h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonEdit;","export default class Pokemon {\r\n    // 1. Typage des propiétés d'un pokémon.\r\n    id: number;\r\n    hp: number;\r\n    cp: number;\r\n    name: string;\r\n    picture: string;\r\n    types: Array<string>;\r\n    created?: Date;\r\n     \r\n    // 2. Définition des valeurs par défaut des propriétés d'un pokémon.\r\n    constructor(\r\n     id: number,\r\n     hp: number = 100,\r\n     cp: number = 10,\r\n     name: string = 'saisir le nom',\r\n     picture: string = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/XXXX.png',\r\n     types: Array<string> = ['Normal'],\r\n     created: Date = new Date()\r\n    ) {\r\n     // 3. Initialisation des propiétés d'un pokémons.\r\n     this.id = id;\r\n     this.hp = hp;\r\n     this.cp = cp;\r\n     this.name = name;\r\n     this.picture = picture;\r\n     this.types = types;\r\n     this.created = created;\r\n    }\r\n   }","import React, { FunctionComponent, useState } from 'react';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\n \nconst PokemonAdd: FunctionComponent = () => {\n\n  const [id] = useState<number>(new Date().getTime());\n  const [pokemon] = useState<Pokemon>(new Pokemon(id));\n   \n  return (\n    <div className=\"row\">\n      <h2 className=\"header center\">Ajouter un pokémon</h2>\n      <PokemonForm pokemon={pokemon} isEditForm={false}></PokemonForm>\n    </div>\n  );\n}\n \nexport default PokemonAdd;","export default class AuthenticationService {\n\n  static isAuthenticated:boolean = false;\n\n  static login(username: string, password: string): Promise<boolean> {\n    const isAuthenticated = (username === 'alphonse' && password === 'alphonse');\n\n    return new Promise(resolve => {\n      setTimeout(() => {\n        this.isAuthenticated = isAuthenticated;\n        resolve(isAuthenticated);\n      }, 1000);\n    });\n  }\n}","import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthenticationService from '../services/authentication-service';\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n};\n\ntype Form = {\n  username: Field,\n  password: Field\n}\n\nconst Login: FunctionComponent = () => {\n\n  const history = useHistory();\n\n  const [form, setForm] = useState<Form>({\n    username: { value: '' },\n    password: { value: '' },\n  });\n\n  const [message, setMessage] = useState<string>('Vous êtes déconnecté. (alphonse / alphonse)');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue } };\n\n    setForm({ ...form, ...newField});\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator username\n    if(form.username.value.length < 3) {\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\n      const newField: Field = { value: form.username.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ username: newField } };\n    } else {\n      const newField: Field = { value: form.username.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ username: newField } };\n    }\n\n    // Validator password\n    if(form.password.value.length < 6) {\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 6 caractères de long.';\n      const newField: Field = {value: form.password.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ password: newField } };\n    } else {\n      const newField: Field = { value: form.password.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ password: newField } };\n    }\n\n    setForm(newForm);\n\n    return newForm.username.isValid && newForm.password.isValid;\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n    if(isFormValid) {\n      setMessage('👉 Tentative de connexion en cours ...');\n      AuthenticationService.login(form.username.value, form.password.value).then(isAuthenticated => {\n        if(!isAuthenticated) {\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\n          return;\n        }\n        \n        history.push('/pokemons');\n        \n      });\n    }\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Form message */}\n                {message && <div className=\"form-group\">\n                  <div className=\"card-panel grey lighten-5\">\n                    {message}\n                  </div>\n                </div>}\n                {/* Field username */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Identifiant</label>\n                  <input id=\"username\" type=\"text\" name=\"username\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.username.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.username.error} \n                  </div>} \n                </div>\n                {/* Field password */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Mot de passe</label>\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.password.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.password.error} \n                  </div>} \n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n \nexport default Login;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthenticationService from './services/authentication-service';\n\nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\n  <Route {...rest} render={(props) => {\n    const isAuthenticated = AuthenticationService.isAuthenticated;\n    if (!isAuthenticated) {    \n      return <Redirect to={{ pathname: '/login' }} />\n    }\n\n    return <Component {...props} />\n  }} />\n);\n\nexport default PrivateRoute;","import React,{FunctionComponent, useEffect, useState} from 'react';\r\nimport Pokemon from './models/pokemon';\r\nimport POKEMONS from './models/mock-pokemon';\r\nimport PokemonList from './pages/pokemon-list';\r\nimport { Link,BrowserRouter as  Router, Route, Switch } from 'react-router-dom';\r\nimport PokemonsDetail from './pages/pokemon-detail';\r\nimport PageNotFound from './pages/page-not-found';\r\nimport PokemonEdit from './pages/pokemon-edit';\r\nimport PokemonAdd from './pages/pokemon-add';\r\nimport Login from './pages/login';\r\nimport PrivateRoute from './PrivateRoute';\r\n  /**FC signifie Function component */\r\nconst App: FunctionComponent = () => {\r\n //const name: String = 'Software ';\r\n //const [pokemons,setName]  = useState<Pokemon[]>(POKEMONS);//Seul une chaine de caractère est sauvégardé ici\r\n /*const [pokemons,setName]  = useState<Pokemon[]>([]);\r\n\r\n useEffect(()=>{\r\n    setName(POKEMONS)\r\n },[]);\r\n  */  \r\n return (\r\n    /*<div>\r\n  <h1>Bonjour !</h1>\r\n  <p>Il ya {pokemons.length} pokemons dans la liste </p>\r\n  </div>*/\r\n // <PokemonList/>\r\n\r\n <Router>\r\n <div>\r\n <nav> \r\n   <div className=\"nav-wrapper teal\">\r\n     <Link to=\"/\" className=\"brand-logo center\">Pokédex</Link>\r\n   </div> \r\n </nav>\r\n <Switch>\r\n <PrivateRoute exact path=\"/\" component={PokemonList} />\r\n   <Route  exact path=\"/login\" component={Login} />\r\n   <PrivateRoute exact path=\"/pokemons\" component={PokemonList} />\r\n   <PrivateRoute path=\"/pokemon/add\" component={PokemonAdd} />\r\n   <PrivateRoute path=\"/pokemons/edit/:id\" component={PokemonEdit} />\r\n   <PrivateRoute path=\"/pokemons/:id\" component={PokemonsDetail} />\r\n\r\n   <Route component={PageNotFound} />\r\n </Switch>\r\n </div>\r\n</Router>\r\n )\r\n}\r\n  \r\nexport default App;","import React from \"react\";\r\nimport  ReactDOM  from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}